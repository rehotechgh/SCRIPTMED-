// <auto-generated />
using System;
using ALENGINE.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ALENGINE.Migrations
{
    [DbContext(typeof(ALENGINEContext))]
    partial class ALENGINEContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ALENGINE.Models.ANC", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("ANCCount")
                        .HasColumnType("int");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<bool?>("ClaimsStatus")
                        .HasColumnType("bit");

                    b.Property<string>("DDescription1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DDescription2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DDescription3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DDescription4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DICD1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DICD2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DICD3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DICD4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DIDRG1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DIDRG2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DIDRG3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DIDRG4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DOB")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Diagnosis1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Diagnosis2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Diagnosis3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Diagnosis4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Husband")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HusbandAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HusbandContact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HusbandOccupation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDate1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDate2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDate3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDate4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDate5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDescription1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDescription2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDescription3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDescription4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDescription5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IGDRG1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IGDRG2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IGDRG3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IGDRG4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IGDRG5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Investigation1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Investigation2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Investigation3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Investigation4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Investigation5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherNames")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Outcome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PDRG1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PDRG2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PDRG3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PDescription1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PDescription2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PDescription3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pdate1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pdate2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pdate3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Procedure1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Procedure2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Procedure3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegistrationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sex")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TUNIT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeOfService")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VisitationDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VisitationType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ANCs");
                });

            modelBuilder.Entity("ALENGINE.Models.ANCHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("AppointmentDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ClaimsStatus")
                        .HasColumnType("bit");

                    b.Property<string>("DDescription1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DDescription2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DDescription3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DDescription4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DICD1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DICD2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DICD3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DICD4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DIDRG1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DIDRG2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DIDRG3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DIDRG4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DOB")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Diagnosis1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Diagnosis2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Diagnosis3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Diagnosis4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dispensary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DispensaryType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Examination")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDate1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDate2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDate3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDate4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDate5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDescription1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDescription2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDescription3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDescription4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDescription5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IGDRG1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IGDRG2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IGDRG3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IGDRG4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IGDRG5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Investigation1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Investigation2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Investigation3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Investigation4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Investigation5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LabRequest")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LabType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherNames")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Outcome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PDRG1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PDRG2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PDRG3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PDescription1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PDescription2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PDescription3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pdate1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pdate2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pdate3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Procedure1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Procedure2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Procedure3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegistrationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SetAppointment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sex")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TUNIT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Treatment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeOfService")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VisitationDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VisitationType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ANCHistories");
                });

            modelBuilder.Entity("ALENGINE.Models.Central", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("AppointmentDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CCC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimsStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DDescription1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DDescription2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DDescription3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DDescription4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DICD1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DICD2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DICD3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DICD4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DICD5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DICD6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DIDRG1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DIDRG2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DIDRG3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DIDRG4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DIDRG5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DIDRG6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DOB")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Diagnosis1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Diagnosis2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Diagnosis3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Diagnosis4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Diagnosis5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Diagnosis6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiagnosisCategory1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiagnosisCategory2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiagnosisCategory3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiagnosisCategory4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiagnosisCategory5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiagnosisCategory6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dispensary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DispensaryType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Examination")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HIVStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HistoryIntake")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDate1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDate2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDate3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDate4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDate5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDescription1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDescription2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDescription3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDescription4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDescription5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IGDRG1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IGDRG2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IGDRG3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IGDRG4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IGDRG5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Investigation1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Investigation2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Investigation3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Investigation4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Investigation5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LabRequest")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LabResult")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LabType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoOfPitTaken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherNames")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Outcome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PDRG1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PDRG2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PDRG3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PDescription1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PDescription2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PDescription3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pdate1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pdate2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pdate3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Procedure1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Procedure2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Procedure3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegistrationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SetAppointment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sex")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SicklingStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TUNIT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Treatment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeOfService")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VisitationDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VisitationType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Centrals");
                });

            modelBuilder.Entity("ALENGINE.Models.Consulting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AppointmentDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ClaimsStatus")
                        .HasColumnType("bit");

                    b.Property<string>("DDescription1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DDescription2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DDescription3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DDescription4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DICD1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DICD2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DICD3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DICD4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DIDRG1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DIDRG2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DIDRG3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DIDRG4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Diagnosis1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Diagnosis2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Diagnosis3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Diagnosis4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dispensary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DispensaryType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Examination")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HistoryIntake")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDate1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDate2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDate3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDate4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDate5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDescription1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDescription2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDescription3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDescription4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDescription5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IGDRG1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IGDRG2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IGDRG3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IGDRG4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IGDRG5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Investigation1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Investigation2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Investigation3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Investigation4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Investigation5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LabRequest")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LabType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherNames")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Outcome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PDRG1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PDRG2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PDRG3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PDescription1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PDescription2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PDescription3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pdate1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pdate2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pdate3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Procedure1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Procedure2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Procedure3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegistrationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SetAppointment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TUNIT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Treatment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeOfService")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VisitationDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VisitationType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Consultings");
                });

            modelBuilder.Entity("ALENGINE.Models.DeliveryNote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("ApgarScoreOfBaby")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BloodGroup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BloodPressure")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DOB")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeliveryTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Deliverynote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GestationalAge")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Height")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherNames")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pulse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegistrationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SP02")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sex")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Temperature")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Weight")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WeightOfBaby")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DeliveryNotes");
                });

            modelBuilder.Entity("ALENGINE.Models.Diagnose", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Diagnoses");
                });

            modelBuilder.Entity("ALENGINE.Models.DiagnosisCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DiagnosisCategories");
                });

            modelBuilder.Entity("ALENGINE.Models.InitialPayment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("CCC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DOB")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("DateOfFirstVisit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HealthInsuranceNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HomeAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherNames")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegistrationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sex")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telephone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("InitialPayments");
                });

            modelBuilder.Entity("ALENGINE.Models.Inventory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("CostPrice")
                        .HasColumnType("float");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("ExpectedSales")
                        .HasColumnType("float");

                    b.Property<string>("ExpiryDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ManufacturingDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ProfitMargin")
                        .HasColumnType("float");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<double>("SalesAmount")
                        .HasColumnType("float");

                    b.Property<double>("SalesPrice")
                        .HasColumnType("float");

                    b.Property<int>("SalesQuantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Inventories");
                });

            modelBuilder.Entity("ALENGINE.Models.InventoryTransaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("CostPrice")
                        .HasColumnType("float");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExpiryDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ManufacturingDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<double>("SalesAmount")
                        .HasColumnType("float");

                    b.Property<double>("SalesPrice")
                        .HasColumnType("float");

                    b.Property<int>("SalesQuantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("InventoryTransactions");
                });

            modelBuilder.Entity("ALENGINE.Models.MedicineList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CODE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DOSAGE")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MedicineLists");
                });

            modelBuilder.Entity("ALENGINE.Models.Members", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address_Line1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address_Line2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Amount")
                        .HasColumnType("float");

                    b.Property<string>("Blood_Group")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contact_Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Firstname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lastname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location_Next_of_Kin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Next_of_Kin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Next_of_Kin_contact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PID")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Members");
                });

            modelBuilder.Entity("ALENGINE.Models.PatientInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("ContactOfNearestRealtive")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DOB")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("District")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FacilityName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HealthFacilityNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HealthInsuranceNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HealthInsuranceSchemeIDNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HomeAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaritalStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameOfHealthInsuranceScheme")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameOfNearestRelative")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Occupation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherNames")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Payment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RegistrationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Religion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SPCODE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sex")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubDistrict_Locality")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telephone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PatientInformations");
                });

            modelBuilder.Entity("ALENGINE.Models.Postnatal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("AppointmentDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BloodGroup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BloodPressure")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DDescription1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DDescription2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DDescription3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DDescription4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DICD1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DICD2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DICD3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DICD4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DIDRG1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DIDRG2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DIDRG3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DIDRG4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DOB")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Diagnosis1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Diagnosis2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Diagnosis3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Diagnosis4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dispensary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DispensaryType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Examination")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Height")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDate1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDate2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDate3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDate4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDate5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDescription1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDescription2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDescription3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDescription4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDescription5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IGDRG1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IGDRG2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IGDRG3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IGDRG4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IGDRG5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Investigation1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Investigation2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Investigation3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Investigation4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Investigation5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LabRequest")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LabType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherNames")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Outcome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PDRG1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PDRG2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PDRG3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PDescription1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PDescription2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PDescription3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pdate1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pdate2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pdate3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonResponsibe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Procedure1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Procedure2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Procedure3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pulse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegistrationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SP02")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SetAppointment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sex")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TUNIT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Temperature")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Treatment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeOfService")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VisitationDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VisitationType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Weight")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Postnatals");
                });

            modelBuilder.Entity("ALENGINE.Models.VitalInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("BloodGroup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BloodPressure")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CCC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Condition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Height")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherNames")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pulse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegistrationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SP02")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Temperature")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Weight")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("VitalInfos");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
